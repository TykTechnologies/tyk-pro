name: Integration tests

on:
  pull_request:
  workflow_dispatch:
    inputs:
      tat-version:
        description: Version tag of the tyk-automated-tests image to run
        type: string
        default: 'v1.0.0-rc3'
      tat-tests:
        description: Run these tests from tyk-automated-tests to run, added to the pytest command line
        type: string
        default: 'not local and not mdcb'
      tyk-version:
        description: ECR docker tag to use
        type: string
        default: master
      tyk-analytics-version:
        description: ECR docker tag to use
        type: string
        default: master
      tyk-pump-version:
        description: ECR docker tag to use
        type: string
        default: master
      tyk-sink-version:
        description: ECR docker tag to use
        type: string
        default: master
  workflow_call:
    inputs: {}

permissions:
  id-token: write   # This is required for requesting the JWT
  contents: read    # This is required for actions/checkout

jobs:
  pro:
    name: tyk-automated-tests on Tyk Pro
    runs-on: ubuntu-latest

    steps:
      - uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: arn:aws:iam::754489498669:role/ecr_rw_tyk
          role-session-name: cipush
          aws-region: eu-central-1

      - uses: aws-actions/amazon-ecr-login@v1
        id: ecr

      - uses: actions/checkout@v3

      - name: Checkout tools repo
        uses: actions/checkout@v3
        with:
          repository: TykTechnologies/tyk-automated-tests
          path: tyk-automated-tests
          ref: refs/tags/${{ inputs.tat-version || 'v1.0.0-rc3'}}
          token: ${{ secrets.ORG_GH_TOKEN }}

      - name: env up
        working-directory: auto
        shell: bash
        env:
          confs_dir: "${{ github.workspace }}/auto/pro"
          graphql_data: "${{ github.workspace }}/tyk-automated-tests/ci/graphql-faker/faker-schema.graphql"
          certs_dir: "${{ github.workspace }}/tyk-automated-tests/ci/certs"
          registry: "${{ steps.ecr.outputs.registry }}"
          tyk_sink_image: "tyk-sink:${{ inputs.tyk-sink-version || 'v2.1.1' }}"
          tyk_image: "tyk:${{ inputs.tyk-version || 'v4.3.4' }}"
          tyk_analytics_image: "tyk-analytics:${{ inputs.tyk-analytics-version || 'working-master' }}"
          tyk_pump_image: "tyk-pump:${{ inputs.tyk-pump-version || 'v1.7.0' }}"
        run: docker compose -f ${{ github.job }}.yml -f deps.yml --quiet-pull --exit-code-from any up
  
      - name: Docker debug in case of failure
        if: ${{failure()}}
        working-directory: auto
        run: |
          echo "---- DOCKER PS ----"
          docker ps -a
          echo "---- DOCKER LOGS ----"
          docker compose -f ${{ github.job }}.yml -f deps.yml logs          


      - name: Run pytest
        working-directory: auto
        run: |
          docker run --env-file test.env --network auto_default ${{ steps.ecr.outputs.registry }}/tyk-automated-tests:${{ inputs.tat-version || 'v1.0.0-rc3'}} pytest -m "${{ inputs.tat-tests || 'not local and not mdcb' }}"