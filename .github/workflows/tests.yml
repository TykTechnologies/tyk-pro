name: Integration tests

on:
  pull_request:
  workflow_call:

env:
  SLACK_CLI_TOKEN: ${{ secrets.BENDER_TOKEN }}
  GOPRIVATE: github.com/TykTechnologies

permissions:
  id-token: write   # This is required for requesting the JWT
  contents: read    # This is required for actions/checkout

jobs:
  ecr-login:
    name: ecr-passwd
    runs-on: ubuntu-latest
  
    outputs:
      aws-ecr-pass: ${{ steps.ecr-pass.outputs.ECR_PASS }}

    steps:
      - uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: arn:aws:iam::754489498669:role/ecr_rw_tyk
          role-session-name: cipush
          aws-region: eu-central-1

      - name: Get ecr password
        id: ecr-pass
        run: |
          echo "ECR_PASS=$(aws ecr get-login-password --region eu-central-1)" >> "$GITHUB_OUTPUT"

  pro:
    name: Pro
    runs-on: ubuntu-latest
    needs: ecr-login
    container:
      image: 754489498669.dkr.ecr.eu-central-1.amazonaws.com/tyk-automated-tests:1.0.0-rc1
      credentials:
        username: AWS
        password: ${{ needs.ecr-login.outputs.aws-ecr-pass }}

    steps:
      - uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: arn:aws:iam::754489498669:role/ecr_rw_tyk
          role-session-name: cipush
          aws-region: eu-central-1

      - uses: aws-actions/amazon-ecr-login@v1

      - uses: actions/checkout@v3

      - name: Bring up env
        working-directory: auto
        run: |
          docker compose -f tyk.yml -f deps.yml -p master --env-file master.env up --quiet-pull -d

      - name: Run pytest
        working-directory: /app
        run: |
          echo "This is home: $GITHUB_WORKSPACE"
          . $GITHUB_WORKSPACE/auto/test.env
          pytest 
          
