name: Integration tests

on:
  pull_request:
  workflow_dispatch:
    inputs:
      tat-tests:
        description: Run these tests from tyk-automated-tests to run, added to the pytest command line
        type: string
        default: 'tests/dashboard_admin_api'
      tyk-version:
        description: ECR docker tag to use
        type: string
        default: master
      tyk-analytics-version:
        description: ECR docker tag to use
        type: string
        default: master
      tyk-pump-version:
        description: ECR docker tag to use
        type: string
        default: master
      tyk-sink-version:
        description: ECR docker tag to use
        type: string
        default: master
  workflow_call:
    inputs:
      tat-tests:
        description: Run these tests from tyk-automated-tests to run, added to the pytest command line
        type: string
        default: 'tests/dashboard_admin_api'
      tyk-version:
        description: ECR docker tag to use
        type: string
        default: master
      tyk-analytics-version:
        description: ECR docker tag to use
        type: string
        default: master
      tyk-pump-version:
        description: ECR docker tag to use
        type: string
        default: master
      tyk-sink-version:
        description: ECR docker tag to use
        type: string
        default: master

env:
  GOPRIVATE: github.com/TykTechnologies

permissions:
  id-token: write   # This is required for requesting the JWT
  contents: read    # This is required for actions/checkout

jobs:
  ecr-login:
    name: ecr-passwd
    runs-on: ubuntu-latest
  
    outputs:
      aws-ecr-pass: ${{ steps.ecr-pass.outputs.ECR_PASS }}

    steps:
      - uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: arn:aws:iam::754489498669:role/ecr_rw_tyk
          role-session-name: cipush
          aws-region: eu-central-1

      - name: Get ecr password
        id: ecr-pass
        run: |
          echo "ECR_PASS=$(aws ecr get-login-password --region eu-central-1)" >> "$GITHUB_OUTPUT"

# The job id corresponds to the environment type that the tests will run on
  pro:
    name: tyk-automated-tests on Tyk Pro
    runs-on: ubuntu-latest
    needs: ecr-login
    container:
      image: 754489498669.dkr.ecr.eu-central-1.amazonaws.com/tyk-automated-tests:1.0.0-rc1
      credentials:
        username: AWS
        password: ${{ needs.ecr-login.outputs.aws-ecr-pass }}

    steps:
      - uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: arn:aws:iam::754489498669:role/ecr_rw_tyk
          role-session-name: cipush
          aws-region: eu-central-1

      - id: ecr
        uses: aws-actions/amazon-ecr-login@v1

      - uses: actions/checkout@v3

      - name: env up
        working-directory: auto
        run: |
          echo "registry=${{ steps.ecr.outputs.registry }}
          tyk_sink_image=\${registry}/tyk-sink:${{ inputs.tyk-sink-version || 'master' }}
          tyk_image=\${registry}/tyk:${{ inputs.tyk-version || 'master' }}
          tyk_analytics_image=\${registry}/tyk-analytics:${{ inputs.tyk-analytics-version || 'master' }}
          tyk_pump_image=\${registry}/tyk-pump:${{ inputs.tyk-pump-version || 'master' }}" > versions.env
          # bring up env
          cat versions.env
          confs_dir=./${{ github.job }} docker compose -f ${{ github.job }}.yml -f deps.yml --env-file versions.env --env-file tat.env up --quiet-pull -d

      - name: Run pytest
        working-directory: /app
        env:
          TYK_TEST_BASE_URL: http://tyk-analytics:3000/
          TYK_TEST_GW_URL: https://tyk:8080/
          TYK_TEST_MONGODB: mongo:27017
          TYK_TEST_REDIS: redis
          TYK_TEST_DB_ADMIN: 12345
          TYK_TEST_GW_SECRET: 352d20ee67be67f6340b4c0605b044b7
          TYK_TEST_DB_NAME: tyk_analytics
          TYK_TEST_FEDERATION_HOST: federation
          TYK_TEST_GRAPHQL_FAKER_HOST: graphql-faker
          TYK_TEST_GRAPHQL_FAKER_SCHEMA_PATH: test-data/graphql-faker/faker-schema.graphql
        run: |
          echo "This is home: $GITHUB_WORKSPACE"
          # . $GITHUB_WORKSPACE/auto/test.env
          pytest ${{ inputs.tat-tests }}
