version: "3.9"
services:
  upstream:
    profiles: ["all", "master-datacenter"]
    container_name: httpbin.org
    image: kennethreitz/httpbin
    restart: always

  tyk-gateway:
    profiles: ["all", "master-datacenter"]
    container_name: tyk-gateway
    image: ${REGISTRY}/${GW_IMAGE}
    env_file:
      - ../configsets/${CONFIGSET}/tyk-gateway.env
    ports:
      - "6000:6000"
      - "8003:8003"
      - "8080:8080" 
    entrypoint: ["/opt/tyk-gateway/tyk", "--conf", "/conf/tyk.conf"]

  tyk-dashboard:
    profiles: ["all", "master-datacenter"]
    container_name: tyk-dashboard
    image: ${REGISTRY}/${DB_IMAGE}
    ports:
      - "3000:3000"
      - "5000:5000"
      - "1026:1025"
    env_file:
      - ../configsets/${CONFIGSET}/tyk-analytics.env
    entrypoint: ["/opt/tyk-dashboard/tyk-analytics", "--conf", "/conf/tyk-analytics.conf"]

  tyk-pump:
      profiles: ["all", "master-datacenter"]
      container_name: tyk-pump
      image: ${REGISTRY}/${PUMP_IMAGE}
      ports:    
          - "8061:8061"
      env_file:
        - ../configsets/${CONFIGSET}/tyk-pump.env
      entrypoint: ["/opt/tyk-pump/tyk-pump", "--conf", "/conf/tyk-pump.conf"]
  bundle-server:
      profiles: ["all", "master-datacenter"]
      container_name: bundle-server
      build:
        context: ./bundle_server
      ports:
          - "8000:8000"
  federation-server:
      profiles: ["all", "master-datacenter"]
      container_name: federation
      image: agatawitkowska/federation-example
      ports:
          - "4000:4000"
          - "4001:4001"
          - "4002:4002"
          - "4003:4003"
  openldap:
      profiles: ["all", "master-datacenter"]
      image: osixia/openldap:1.5.0
      container_name: openldap
      ports:
      - '389:389'
      - '636:636'
      environment:
      - LDAP_READONLY_USER=true
      - LDAP_READONLY_USER_USERNAME=read-only-admin
      - LDAP_READONLY_USER_PASSWORD=password
  graphql-faker:
      profiles: ["all", "master-datacenter"]
      container_name: graphql-faker
      image: apisguru/graphql-faker:latest
      command: "faker-schema.graphql"
      ports:
          - "9002:9002"
  test:
    profiles: ["all", "test"]
    container_name: test
    image: ${REGISTRY}/${TEST_IMAGE}
    env_file:
      - ../configsets/${CONFIGSET}/test.env
    command: ${TESTSUITE}

  restcountries:
      container_name: restcountries
      image: bigpapoo/restcountries:1.0
      
  trevorblades:
      container_name: trevorblades
      image: mangomm/trevorblades-countries

networks:
  default:
    name: tyk-network
    external: true